node {
  stage('Git-Checkout') {
   git 'https://github.com/RoohinazK/war-app.git'
  }

  stage('Maven-Clean') {
   sh label: '', script: 'mvn clean'
  }
    
 stage('Maven-Compile') {
   sh label: '', script: 'mvn compile'
  }
  stage('Sonar Analysis') {
   withSonarQubeEnv('Sonar') {
        sh "mvn sonar:sonar"
    }
  }
   stage('Maven-Test') {
   sh label: '', script: 'mvn test'
  }
  
   stage('Maven-Package') {
   sh label: '', script: 'mvn package'
}
 stage('Jfrog Artifacory Upload') {
        def server= Artifactory.server 'jFrog'
                    def uploadSpec= """{
                        "files": [{
                        "pattern": "target/*.war",
                        "target": "maven-repo"}]
                    }"""
        server.upload(uploadSpec)
        
        }
        
        stage("Remove Package") {
        sh "rm -rf target/"
        }
        
        
          stage('Download package from JFrog') {
            def server= Artifactory.server 'jFrog'
            def downloadSpec = """{
            "files": [
            {
                "pattern": " maven-repo/warapp-0.0.1.war",
                 
                "target": "./warapp-0.0.1.war"
            }
            ]
            }"""
        server.download(downloadSpec)
    }
       
 stage('Docker-Stage-Deployment') {
   sh label: '', script: 'sudo docker-compose -f docker-compose.yaml up -d '
  }
  }
